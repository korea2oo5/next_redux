{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyose\\\\Documents\\\\ntc_redux\\\\containers\\\\NoticeContainers.js\";\nvar __jsx = React.createElement;\nimport NoticeList from \"../components/NoticeList\";\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getNtc } from '../modules/notice';\n\nconst NoticeContainers = props => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.notice.data);\n  const OnChage = useCallback(() => dispatch(getNtc()), [dispatch]);\n  console.log(props.props);\n  return __jsx(React.Fragment, null, __jsx(NoticeList, {\n    props: props.props,\n    onChage: OnChage,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NoticeContainers;","map":{"version":3,"sources":["C:/Users/hyose/Documents/ntc_redux/containers/NoticeContainers.js"],"names":["NoticeList","React","useCallback","useDispatch","getNtc","NoticeContainers","props","dispatch","data","useSelector","state","notice","OnChage","console","log"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAkC,OAAlC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,IAAI,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaH,IAAvB,CAAxB;AACA,QAAMI,OAAO,GAAGV,WAAW,CAAC,MAAMK,QAAQ,CAACH,MAAM,EAAP,CAAf,EAA2B,CAACG,QAAD,CAA3B,CAA3B;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACA,KAAlB;AACA,SACI,4BACI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAK,CAACA,KAAzB;AAAgC,IAAA,OAAO,EAAEM,OAAzC;AAAkD,IAAA,IAAI,EAAEJ,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAXD;;AAaA,eAAeH,gBAAf","sourcesContent":["import NoticeList from \"../components/NoticeList\";\r\nimport React, { useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { getNtc } from '../modules/notice'\r\n\r\nconst NoticeContainers = (props) => {\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.notice.data);\r\n    const OnChage = useCallback(() => dispatch(getNtc()), [dispatch]);\r\n\r\n    console.log(props.props)\r\n    return (\r\n        <>\r\n            <NoticeList props={props.props} onChage={OnChage} data={data}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NoticeContainers;"]},"metadata":{},"sourceType":"module"}