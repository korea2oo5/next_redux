{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var ntc = {\n  NTCID: 'notice/NTCID'\n};\nexport var getNtc = function getNtc(data) {\n  return {\n    type: ntc.NTCID,\n    data: data\n  };\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ntc.NTCID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.data\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/hyose/Documents/ntc_redux/modules/notice.js"],"names":["ntc","NTCID","getNtc","data","type","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,IAAMA,GAAG,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAZ;AAEP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,GAAG,CAACC,KADP;AAEHE,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,eAAe,SAASE,OAAT,GAAoC;AAAA,MAAnBC,KAAmB,uEAAX,CAAW;AAAA,MAARC,MAAQ;;AAC/C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKJ,GAAG,CAACC,KAAT;AACI,6CACOK,KADP;AAEIH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFjB;;AAIJ;AACI,aAAOG,KAAP;AAPR;AAUH","sourcesContent":["export const ntc = {NTCID: 'notice/NTCID'};\r\n\r\nexport const getNtc = (data) => {\r\n    return {\r\n        type: ntc.NTCID,\r\n        data\r\n    }\r\n};\r\n\r\nexport default function reducer(state = 0, action) {\r\n    switch (action.type) {\r\n        case ntc.NTCID:\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}